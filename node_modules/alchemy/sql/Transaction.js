'use strict'

var Promise = require('bluebird')
var classy  = require('classy')
var getEngine = require('../defaultEngine')

module.exports = classy.define({

	extend: require('./SqlStatement'),
	alias : 'sql.Transaction',

	init: function(){
		this.statements = [].slice.call(arguments, 0)
	},

	add: function(){
		this.statements = this.statements.concat([].slice.call(arguments, 0))
	},

	toString: function(){
		return this.valueOf()
	},

	valueOf: function(config){
		return 'BEGIN; ' + this.statements.map(function(s){ return s.valueOf() })
	},

	execute: function(config){

		var statements = this.statements.filter(function(s){
			return !!s
		})

		return new Promise(function(resolve, reject){

			getEngine()
				.transaction(statements, function(err, results){
					err?
						reject(err):
						resolve(results)
				})

		}.bind(this))
	}
})