var Table  = require('./Table')
var Column = require('./Column')
var Types = require('./Types')
var Select = require('./Select')
var Transaction = require('./Transaction')
var alchemy = require('./alchemy')('postgres://postgres:admin@localhost/master')
var path = require('path')

alchemy
	.set('main.logfile', path.join(process.cwd(),'/logs/alchemy.log'))
	.set('sql.logfile', path.join(process.cwd(), '/logs/sql.log'))

// var User = Table('user', null,
// 	Column('user_id', Types.Integer, { primaryKey: true }),
// 	Column('user_name', Types.String(16), { nullable: false }),
// 	Column('email_address', Types.String(60), { key: 'email' }),
// 	Column('password', Types.String(20), { nullable: false})
// )

// var select = Select(User.c.user_name, User.c.email_address)
// 				.where(User.c['user_name'])
// 				.is('aaa')
// 				.end()
// 				.set('name', 'select user')

// select.execute()
// 	.then(function(result){
// 		console.log(result.rows)
// 	})


var tableSchemaColumn = Column('table_schema')


select = Select([tableSchemaColumn, { name: 'table_name'}])
			.from('information_schema.tables')
			.where(tableSchemaColumn)
				.is('public')
			.end()

select.execute()
	.then(function(result){
        console.log(result)
	})

// Table('user_prefs', null,
// 	Column('pref_id', Types.Integer, { primaryKey: true }),
// 	Column('user_id', Types.Integer, { nullable: false, foreignKey: 'user.user_id' }),
// 	Column('pref_name', Types.String(50), { nullable: false }),
// 	Column('pref_value', Types.String(100))
// ).create()

